metadata.config_version_wildcard = "0.54.*"

[game_setup]
roblox_version = '2021'

[game_setup.persistence]
sqlite_path = '_.sqlite'
clear_on_start = false

[server_core.place_file]
rbxl_uri = './_.rbxl'
enable_saveplace = false

[server_core.metadata]
title = 'òó'
description = ''
creator_name = 'ÒÓ'
icon_uri = 'c:\Users\USERNAME\Pictures\Byfron Icon.png'


[remote_data]
asset_redirects = '''
import subprocess
import os.path
import base64

RBXMX_DATA = open(f'{CONFIG_DIR}/_.txt').read()

def f(asset_iden):
    if not isinstance(asset_iden, str):
        return
    iden_parts = asset_iden.split('-')
    if iden_parts[0] != 'photo':
        return

    url = base64.b64decode(
        iden_parts[2],
        altchars=b'+_',
    ).decode('utf-8')

    if iden_parts[1] == 'model':
        data = subprocess.check_output(['ffprobe', '-v', 'error', '-select_streams', 'v:0', '-show_entries', 'stream=width,height', '-of', 'csv=s=x:p=0', url]).decode('utf-8')
        [width, height] = [int(v) for v in data.split('x')]
        mult = min(3/width, 3/height, 1)
        return {
            'raw_data': bytes(
                RBXMX_DATA % {
                    'url': f'rbxassetid://photo-image-{iden_parts[2]}',
                    'width': width * mult,
                    'height': height * mult,
                },
                encoding='utf-8',
            ),
        }
    elif iden_parts[1] == 'image':
        data = subprocess.check_output(['ffmpeg', '-v', 'error', '-i', url, '-f', 'apng', '-'])
        return {
            'raw_data': data,
        }
'''

[server_core]
chat_style = 'ClassicAndBubble'
startup_script = '''
local PIXELS_PER_STUD = 100

-- https://devforum.roblox.com/t/base64-encoding-and-decoding-in-lua/1719860
-- `/` was replaced with `_` for URLs.

-- this function converts a string to base64
function to_base64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+_'
    return ((data:gsub('.', function(x)
        local r,b='',x:byte()
        for i=8,1,-1 do r=r..(b%2^i-b%2^(i-1)>0 and '1' or '0') end
        return r;
    end)..'0000'):gsub('%d%d%d?%d?%d?%d?', function(x)
        if (#x < 6) then return '' end
        local c=0
        for i=1,6 do c=c+(x:sub(i,i)=='1' and 2^(6-i) or 0) end
        return b:sub(c+1,c+1)
    end)..({ '', '==', '=' })[#data%3+1])
end

-- this function converts base64 to string
function from_base64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+_'
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end

local chain_ends = {}
function _G.generate_thing(player, image_url)
    local asset_iden = string.format('rbxassetid://photo-model-%s', to_base64(image_url))
    local part = game:GetObjects(asset_iden)[1]

    local char = player.Character
    if not char then char = player.CharacterAdded:Wait() end
    local head = char:WaitForChild('Head')
    part.CFrame = head.CFrame

    local char_end = chain_ends[player]
    local size_offset = .5
    if not char_end or not char_end.Parent then
        char_end = head
        size_offset = 2
    end
    chain_ends[player] = part
    local dist = char_end.Size.Y/2 + part.Size.Y/2 + size_offset

    local a0 = Instance.new('Attachment', part)
    local a1 = Instance.new('Attachment', char_end)
    local h = Instance.new('HingeConstraint', a0)
    a0.CFrame = CFrame.new(0, -dist, 0) * CFrame.Angles(0, 0, math.pi/2)
    a1.CFrame = CFrame.Angles(0, 0, math.pi/2)
    h.Attachment0 = a0
    h.Attachment1 = a1

    h.ActuatorType = Enum.ActuatorType.Motor
    h.AngularVelocity = 1
    h.MotorMaxTorque = 1e3


    part.Parent = char
    return part
end
game.ReplicatedStorage.LoadImage.OnServerInvoke = _G.generate_thing
'''

filter_text = '''
function(text, user_id_num, user_code)
    if text:find('^https?://') then
        url = text
        _G.generate_thing(game.Players:GetPlayerByUserId(user_id_num), url)
    end
    return text
end
'''

retrieve_avatar_type = '''
def f(id_num, user_code):
    return 'R15'
'''

retrieve_avatar_items = '''
def f(id_num, user_code):
    if user_code == 'VisualPlugin':
        return [
            10726856854,
            9482991343,
            9481782649,
            9120251003,
            4381817635,
            6969309778,
            5731052645,
            2846257298,
            121390054,
            261826995,
            154386348,
            201733574,
            48474294,
            6340101,
            192483960,
            190245296,
            183808364,
            34247191,
        ]
    return []
'''

retrieve_avatar_colors = '''
function(id_num, user_code) -- str -> {[str]: number}
    if user_code == 'VisualPlugin' then
        return {
            head = 315,
            left_arm = 315,
            left_leg = 315,
            right_arm = 315,
            right_leg = 315,
            torso = 315,
        }
    end
    return {
        head = BrickColor.Random().Number,
        left_arm = BrickColor.Random().Number,
        left_leg = BrickColor.Random().Number,
        right_arm = BrickColor.Random().Number,
        right_leg = BrickColor.Random().Number,
        torso = BrickColor.Random().Number,
    }
end
'''

retrieve_avatar_scales = '''
def f(id_num, user_code):
    return {
        "height": 1,
        "width": 1,
        "head": 1,
        "depth": 1,
        "proportion": 0,
        "body_type": 0,
    }
'''

retrieve_username = '''
def f(user_id_num, user_code):
    return user_code
'''

retrieve_default_funds = '''
def f(*a):
    return 6969
'''
